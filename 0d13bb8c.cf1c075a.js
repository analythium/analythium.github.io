(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{133:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),i=n(9),r=(n(0),n(177)),o={id:"containers-shiny",title:"Shiny in Docker"},c={id:"containers-shiny",title:"Shiny in Docker",description:"This section is based on the",source:"@site/docs/containers-shiny.md",permalink:"/docs/containers-shiny",editUrl:"https://github.com/analythium/analythium.github.io/edit/source/docs/containers-shiny.md",lastUpdatedBy:"Peter Solymos",lastUpdatedAt:1619388287,sidebar:"docs",previous:{title:"Docker Basics",permalink:"/docs/containers-docker"},next:{title:"ShinyProxy",permalink:"/docs/shinyproxy"}},l=[{value:"Pull image",id:"pull-image",children:[]},{value:"Image tag",id:"image-tag",children:[]},{value:"Authentication",id:"authentication",children:[]},{value:"Run container",id:"run-container",children:[]},{value:"Shiny host and port",id:"shiny-host-and-port",children:[]},{value:"Build image",id:"build-image",children:[]},{value:"Push image",id:"push-image",children:[]},{value:"Dockerfile",id:"dockerfile",children:[]},{value:"CI/CD",id:"cicd",children:[]}],p={rightToc:l};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This section is based on the\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://gitlab.com/analythium/shinyproxy-hello/"}),"analythium/shinyproxy-hello")," GitLab project. The demo Shiny app displays a slider and a histogram\ninspired by the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://shiny.rstudio.com/gallery/example-01-hello.html"}),"example-01-hello"),"\nShiny example. The same application we build in the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"shiny"}),"Shiny")," chapter."),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://gitlab.com/analythium/shinyproxy-hello/"}),"analythium/shinyproxy-hello")," project contains our demo Shiny app in the ",Object(r.b)("inlineCode",{parentName:"p"},"app")," folder:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),".\n\u251c\u2500\u2500 app\n\u2502\xa0\xa0 \u251c\u2500\u2500 global.R\n\u2502\xa0\xa0 \u251c\u2500\u2500 server.R\n\u2502\xa0\xa0 \u2514\u2500\u2500 ui.R\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .gitlab-ci.yml\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 shinyproxy-hello.Rproj\n")),Object(r.b)("p",null,"We will review some of the other files as well, particularly the ",Object(r.b)("inlineCode",{parentName:"p"},"Dockerfile")," and ",Object(r.b)("inlineCode",{parentName:"p"},".gitlab-ci.yml"),"."),Object(r.b)("h2",{id:"pull-image"},"Pull image"),Object(r.b)("p",null,"We can pull the image made from the GitLab project's\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://gitlab.com/analythium/shinyproxy-hello/container_registry"}),"Gcontainer registry"),"\nusing the ",Object(r.b)("inlineCode",{parentName:"p"},"docker pull")," CLI command (we need to have the Docker Desktop running\non our local machine):"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker pull registry.gitlab.com/analythium/shinyproxy-hello/hello\n")),Object(r.b)("h2",{id:"image-tag"},"Image tag"),Object(r.b)("p",null,"The image is tagged as ",Object(r.b)("inlineCode",{parentName:"p"},"REGISTRY/USER/PROJECT/IMAGE:TAG"),". In this case the ",Object(r.b)("inlineCode",{parentName:"p"},"TAG"),"\nis ",Object(r.b)("inlineCode",{parentName:"p"},"latest")," which is the default tag when not specified otherwise.\n(When the ",Object(r.b)("inlineCode",{parentName:"p"},"REGISTRY")," os not provided, Docker uses the Docker Hub as the default)."),Object(r.b)("h2",{id:"authentication"},"Authentication"),Object(r.b)("p",null,"We don't need to authenticate for public images (like this one), but in case\nwe are trying to pull a private image from a private GitLab project, we\nneed to log into the GitLab Container registry as:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker login registry.gitlab.com\n")),Object(r.b)("p",null,"This command will ask for our credentials interactively. If you want to provide\nyour username and password. "),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"It is recommended to use a personal access token (PAT)\ninstead of your password because PAT can have more restricted scopes, i.e.\nonly used to access the container registry which is a lot more secure."))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"cat ~/my_password.txt | docker login --username USER --password-stdin\n")),Object(r.b)("p",null,"where ",Object(r.b)("inlineCode",{parentName:"p"},"~/my_password.txt")," is a file with the PAT in it,\n",Object(r.b)("inlineCode",{parentName:"p"},"USER")," is the GitLab username."),Object(r.b)("h2",{id:"run-container"},"Run container"),Object(r.b)("p",null,"After pulling the image, we can use ",Object(r.b)("inlineCode",{parentName:"p"},"docker run")," to run a command in a new container\nbased on an the image. We use the ",Object(r.b)("inlineCode",{parentName:"p"},"-p 4000:3838")," argument and the image tag:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker run -p 4000:3838 registry.gitlab.com/analythium/shinyproxy-hello/hello\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"-p")," is a shorthand for ",Object(r.b)("inlineCode",{parentName:"p"},"--publish"),", that instructs Docker to publish a\ncontainer\u2019s port to the host port. In our example, 3838 is the container's port\nwhich is mapped to the 4000 port of the host machine. As a result, we can\nthen visit ",Object(r.b)("inlineCode",{parentName:"p"},"127.0.0.1:4000")," where we'll find the Shiny app.\nHit Ctrl+C to stop the container."),Object(r.b)("p",null,"Read all about the ",Object(r.b)("inlineCode",{parentName:"p"},"docker run")," command ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/commandline/run/"}),"here"),". We well learn about the 3838 port in a bit."),Object(r.b)("h2",{id:"shiny-host-and-port"},"Shiny host and port"),Object(r.b)("p",null,"When we talked about ",Object(r.b)("inlineCode",{parentName:"p"},"runApp")," we did not review all the possible arguments to this R function. Besides the app location (app object, list, file, or directory)\nthere are two other important arguments:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"host"),": this defines the IP address (defaults to 'localhost': 127.0.0.1)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"port"),": TCP port that the application should listen on; a random port when no value provided")),Object(r.b)("p",null,"When we run the shiny app locally, we see a message ",Object(r.b)("inlineCode",{parentName:"p"},"Listening on http://127.0.0.1:7800"),"\nor similar, which is the protocol (HTTP), the host address, and the port number.\nThe Shiny app is running in a web server that listens to client requests,\nand provides a response."),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"../../img/docker/shiny-req-res.png",alt:"Shiny request/response",title:"Shiny request/response"}))),Object(r.b)("h2",{id:"build-image"},"Build image"),Object(r.b)("p",null,"Let's create a file named ",Object(r.b)("inlineCode",{parentName:"p"},"Dockerfile")," (",Object(r.b)("inlineCode",{parentName:"p"},"touch Dockerfile"),") then\nopen the file and copy the following text into the file then save:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),'FROM rocker/r-base:latest\nLABEL maintainer="USER <user@example.com>"\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    sudo \\\n    libcurl4-gnutls-dev \\\n    libcairo2-dev \\\n    libxt-dev \\\n    libssl-dev \\\n    libssh2-1-dev \\\n    && rm -rf /var/lib/apt/lists/*\nRUN install.r shiny\nRUN echo "local(options(shiny.port = 3838, shiny.host = \'0.0.0.0\'))" > /usr/lib/R/etc/Rprofile.site\nRUN addgroup --system app \\\n    && adduser --system --ingroup app app\nWORKDIR /home/app\nCOPY app .\nRUN chown app:app -R /home/app\nUSER app\nEXPOSE 3838\nCMD ["R", "-e", "shiny::runApp(\'/home/app\')"]\n')),Object(r.b)("p",null,"To build the image from the Dockerfile, run"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker build -t registry.gitlab.com/analythium/shinyproxy-hello/hello .\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"-t")," argument is the tag, the ",Object(r.b)("inlineCode",{parentName:"p"},".")," at the end refers to the ",Object(r.b)("em",{parentName:"p"},"context")," of the build, which is our current directory (i.e. where the ",Object(r.b)("inlineCode",{parentName:"p"},"Dockerfile")," resides) with a set of files based on which the image is built."),Object(r.b)("h2",{id:"push-image"},"Push image"),Object(r.b)("p",null,"We can push the locally build Docker image to the container registry:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker push registry.gitlab.com/analythium/shinyproxy-hello/hello\n")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"The image tag should start with the registry name unless you\nare pushing to Docker Hub."))),Object(r.b)("h2",{id:"dockerfile"},"Dockerfile"),Object(r.b)("p",null,"Let's review the file line by line. The full Dockerfile reference can be found ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/"}),"here"),"."),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/#from"}),Object(r.b)("inlineCode",{parentName:"a"},"FROM")," instruction")," initializes a new build stage and sets the ",Object(r.b)("em",{parentName:"p"},"base image"),".\nWe take the latest ",Object(r.b)("inlineCode",{parentName:"p"},"r-base")," image from the ",Object(r.b)("inlineCode",{parentName:"p"},"rocker")," project (see on ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://hub.docker.com/r/rocker/r-base"}),"Docker Hub"),"):"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"FROM rocker/r-base:latest\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"LABEL")," instruction is optional, it adds metadata to an image, e.g. who to contact in case of issues or questions:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),'LABEL maintainer="USER <user@example.com>"\n')),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/#run"}),Object(r.b)("inlineCode",{parentName:"a"},"RUN")," instruction")," executes the command in a new ",Object(r.b)("em",{parentName:"p"},"layer")," (a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/glossary/#layer"}),"layer")," is modification to the image) on top of the current image. The following command updates the base image with a couple of libraries that are required by Shiny and related R packages (system dependencies):"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"RUN apt-get update && apt-get install -y --no-install-recommends \\\n    sudo \\\n    libcurl4-gnutls-dev \\\n    libcairo2-dev \\\n    libxt-dev \\\n    libssl-dev \\\n    libssh2-1-dev \\\n    && rm -rf /var/lib/apt/lists/*\n")),Object(r.b)("p",null,"The following ",Object(r.b)("inlineCode",{parentName:"p"},"RUN")," command uses the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/eddelbuettel/littler"}),"littler")," command line interface shipped with the ",Object(r.b)("inlineCode",{parentName:"p"},"r-base")," image to install the Shiny package and its dependencies:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"RUN install.r shiny\n")),Object(r.b)("p",null,"The next command sets options in the ",Object(r.b)("inlineCode",{parentName:"p"},"Rprofile.site")," file which are going to be loaded by the R session. These options specify the Shiny host and port that ",Object(r.b)("inlineCode",{parentName:"p"},"runApp")," will use:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"RUN echo \"local(options(shiny.port = 3838, shiny.host = '0.0.0.0'))\" > /usr/lib/R/etc/Rprofile.site\n")),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"We do not want the container to run as root. Running the container with root privileges allows unrestricted use which is to be avoided in production\n(read more about advantages ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://engineering.bitnami.com/articles/why-non-root-containers-are-important-for-security.html"}),"here"),"):"))),Object(r.b)("p",null,"The following command creates a linux group and user, both called ",Object(r.b)("inlineCode",{parentName:"p"},"app"),".\nThis user will have access to the app instead of the default root user:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"RUN addgroup --system app \\\n    && adduser --system --ingroup app app\n")),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/#workdir"}),Object(r.b)("inlineCode",{parentName:"a"},"WORKDIR")," instruction")," sets the working directory for subsequent instructions. We change this to the home folder of the ",Object(r.b)("inlineCode",{parentName:"p"},"app")," user which is ",Object(r.b)("inlineCode",{parentName:"p"},"/home/app"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"WORKDIR /home/app\n")),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/#copy"}),Object(r.b)("inlineCode",{parentName:"a"},"COPY")," instruction")," copies new files or directories from the source (our ",Object(r.b)("inlineCode",{parentName:"p"},"app")," folder containing the R script files for our Shiny app) and adds them to the filesystem of the container at the destination path (",Object(r.b)("inlineCode",{parentName:"p"},".")," refers to the current work directory defined at the previous step):"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"COPY app .\n")),Object(r.b)("p",null,"The next command sets permissions for the ",Object(r.b)("inlineCode",{parentName:"p"},"app")," user:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"RUN chown app:app -R /home/app\n")),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/#user"}),Object(r.b)("inlineCode",{parentName:"a"},"USER")," instruction")," sets the user name (or UID) and optionally the user group (or GID) to use when running the image:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"USER app\n")),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/#expose"}),Object(r.b)("inlineCode",{parentName:"a"},"EXPOSE")," instruction")," tells Docker which ports the container listens on at runtime. We set this to the Shiny port defined in the ",Object(r.b)("inlineCode",{parentName:"p"},"Rprofile.site")," file:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),"EXPOSE 3838\n")),Object(r.b)("p",null,"Finally, the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/#cmd"}),Object(r.b)("inlineCode",{parentName:"a"},"CMD")," instruction")," closes off our ",Object(r.b)("inlineCode",{parentName:"p"},"Dockerfile"),".\nThe ",Object(r.b)("inlineCode",{parentName:"p"},"CMD")," instruction provides the defaults for an executing container.\nThere can only be one ",Object(r.b)("inlineCode",{parentName:"p"},"CMD")," instruction in a ",Object(r.b)("inlineCode",{parentName:"p"},"Dockerfile")," (only the last ",Object(r.b)("inlineCode",{parentName:"p"},"CMD")," will take effect). Our ",Object(r.b)("inlineCode",{parentName:"p"},"CMD")," specifies the executable (",Object(r.b)("inlineCode",{parentName:"p"},'"R"'),") and parameters for the executable () in an array. The ",Object(r.b)("inlineCode",{parentName:"p"},"-e")," option means we are running an expression that is ",Object(r.b)("inlineCode",{parentName:"p"},"shiny::runApp('/home/app')"),". The expression will run the Shiny app that we copied into the ",Object(r.b)("inlineCode",{parentName:"p"},"/home/app")," folder:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Dockerfile"}),'CMD ["R", "-e", "shiny::runApp(\'/home/app\')"]\n')),Object(r.b)("p",null,"We can build the image using ",Object(r.b)("inlineCode",{parentName:"p"},"docker build")," by speficying the tag and the context:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker build -t registry.gitlab.com/analythium/shinyproxy-hello/hello .\n")),Object(r.b)("h2",{id:"cicd"},"CI/CD"),Object(r.b)("p",null,"The following continuous integration/continuous deployment (CI/CD)\nsection assumes that we are using GitLab as our source control platform.\nSimilar setup is possible with GitHub actions, but is a bit more complicated."),Object(r.b)("p",null,"The following text should be added to ",Object(r.b)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," in the root of the\nproject:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml"}),'stages:\n  - build\n\nbuild-app:\n  stage: build\n  image: docker:stable\n  services:\n    - docker:dind\n  variables:\n    APP_NAME: "hello"\n    CONTAINER_IMAGE: "$CI_REGISTRY/$CI_PROJECT_PATH/$APP_NAME"\n    DOCKER_HOST: tcp://docker:2375\n    DOCKER_DRIVER: overlay2\n  only:\n    - master\n  script:\n    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY\n    - docker pull $CONTAINER_IMAGE:latest || true\n    - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:latest .\n    - docker push $CONTAINER_IMAGE:latest\n')),Object(r.b)("p",null,"This will build the Docker image and push it to the container registry.\nThe pipeline results can be seen ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://gitlab.com/analythium/shinyproxy-hello/-/pipelines"}),"here"),", the image is ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://gitlab.com/analythium/shinyproxy-hello/container_registry"}),"here"),"."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Further reading")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://ropenscilabs.github.io/r-docker-tutorial/"}),"R Docker tutorial")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://colinfay.me/docker-r-reproducibility/"}),"Docker for R users")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://journal.r-project.org/archive/2017/RJ-2017-065/RJ-2017-065.pdf"}),"An Introduction to Rocker")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://journal.r-project.org/archive/2020/RJ-2020-007/RJ-2020-007.pdf"}),"The Rockerverse")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.gitlab.com/ee/ci/introduction/"}),"GitLab CI/CD"))))),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Contact us!")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Are you considering to build a Shiny app? Do you need advice about containers? Reach out to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://analythium.io/contact"}),"Analythium")," if you need commercial support and consulting services!"))))}b.isMDXComponent=!0},177:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),b=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=b(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(n),d=a,m=s["".concat(o,".").concat(d)]||s[d]||h[d]||r;return n?i.a.createElement(m,c(c({ref:t},p),{},{components:n})):i.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<r;p++)o[p]=n[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);